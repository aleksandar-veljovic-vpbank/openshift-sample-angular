kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: angular-web-app
  annotations:
    description: Just building a little angular app with a Node builder
    iconClass: icon-jboss
    tags: 'nodejs, angular, web app'
    template.openshift.io/provider-display-name: ''
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: angular-web-app-builder
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: static-web-app-running-on-nginx
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: node-ubi-s2i-image
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'registry.access.redhat.com/ubi8/nodejs-14:latest'
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: nginx-image-runtime
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'registry.redhat.io/rhel8/nginx-116:latest'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: angular-web-app-builder
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'angular-web-app-builder:latest'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        contextDir: '${SOURCE_REPOSITORY_DIR}'
        type: Git
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'node-ubi-s2i-image:latest'
          incremental: true
        type: Source
      triggers:
        - github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
          type: GitHub
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: static-web-app-running-on-nginx
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'static-web-app-running-on-nginx:latest'
      postCommit: {}
      resources: {}
      source:
        type: Image
        images:
          - from:
              kind: ImageStreamTag
              name: 'angular-web-app-builder:latest'
            paths:
              - destinationDir: .
                sourcePath: '/opt/app-root/src/${OUTPUT_DIR}/.'
      strategy:
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'nginx-image-runtime:latest'
          incremental: true
        type: Source
      triggers:
        - github:
            secret: '${GITHUB_WEBHOOK_SECRET}'
          type: GitHub
        - type: ConfigChange
        - type: ImageChange
          imageChange: {}
        - type: ImageChange
          imageChange:
            from:
              kind: ImageStreamTag
              name: 'angular-web-app-builder:latest'
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: angular-web-app
      name: angular-web-app
    spec:
      replicas: 1
      revisionHistoryLimit: 2
      selector:
        app: angular-web-app
      strategy:
        rollingParams:
          timeoutSeconds: 3600
        type: Rolling
      template:
        metadata:
          labels:
            app: angular-web-app
        spec:
          containers:
            - env:
                - name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: API_URL_WEBSERVICE
                  value: '${API_URL_WEBSERVICE}'
              image: static-web-app-running-on-nginx
              lifecycle:
                postStart:
                  exec:
                    command:
                      - /bin/sh
                      - '-c'
                      - >-
                        find . -type f -name 'main*.js' -exec sed -i
                        "s,API_URL_PLACEHOLDER,$API_URL_WEBSERVICE,gi" {} \;
              imagePullPolicy: IfNotPresent
              name: static-web-app-running-on-nginx
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - static-web-app-running-on-nginx
            from:
              kind: ImageStreamTag
              name: 'static-web-app-running-on-nginx:latest'
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: angular-web-app
      name: angular-web-app
    spec:
      ports:
        - name: http
          port: 8080
      selector:
        app: angular-web-app
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: angular-web-app
      name: angular-web-app
    spec:
      port:
        targetPort: 8080
      to:
        kind: Service
        name: angular-web-app
parameters:
  - name: SOURCE_REPOSITORY_URL
    displayName: Source URL
    description: The source URL for the application
    value: 'https://github.com/aleksandar-veljovic-vpbank/openshift-sample-angular.git'
    required: true
  - name: SOURCE_REPOSITORY_REF
    displayName: Source Branch
    description: The branch name for the application
    value: main
    required: true
  - name: SOURCE_REPOSITORY_DIR
    displayName: Source Directory
    description: The location within the source repo of the application
    value: .
    required: true
  - name: OUTPUT_DIR
    displayName: Output Directory
    description: The location of the compiled static files from your Node builder
    value: dist/openshift-sample-angular
  - name: GITHUB_WEBHOOK_SECRET
    displayName: GitHub Webhook Secret
    description: A secret string used to configure the GitHub webhook.
    generate: expression
    from: '[a-zA-Z0-9]{40}'
    required: true
  - name: API_URL_WEBSERVICE
    displayName: URL of the web service
    description: The web service running on WildFly ending with ".../openshift-sample-webservice"
    required: true
labels:
  application: modern-web-app
